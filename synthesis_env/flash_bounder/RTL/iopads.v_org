module iopads( 
               tdigit, tdigit_flag,
               reset, int, tdsp_port_out, tdsp_port_in,
	       scan_en, test_mode, scan_clk,
               spi_data, spi_fs,
	       refclk, vcop, vcom, pllrst, ibias,
               tdigitO, tdigit_flagO,
               resetI, intI, tdsp_portO, tdsp_portI,
	       scan_enI, test_modeI, scan_clkI,
               spi_dataI, spi_fsI,
	       refclkI, vcopO, vcomO, pllrstI, ibiasI
	       );

   output  [7:0] tdigit ;
   output [15:0] tdsp_port_out ;

   input  [15:0] tdsp_port_in ;

   output tdigit_flag	,
          vcop		,
          vcom ;

   input  reset		,
          int		,
          scan_en	,
          scan_clk	,
          test_mode	,
          spi_data	,
          spi_fs	,
          refclk	,
          pllrst	,
          ibias ;

   input   [7:0] tdigitO ;
   input  [15:0] tdsp_portO ;

   output [15:0] tdsp_portI ;

   input  tdigit_flagO	,
          vcopO		,
          vcomO ;

   output resetI	,
          intI		,
          scan_enI	,
          scan_clkI	,
          test_modeI	,
          spi_dataI	,
          spi_fsI	,
          refclkI	,
          pllrstI	,
          ibiasI ;

/* Power and Ground cells should be added through FE ioc file */
/*   PVSS1DGZ  Pvss0( );  */
/*   PVSS1DGZ  Pvss1( );  */
/*   PVSS1DGZ  Pvss2( );  */
/*   PVSS1DGZ  Pvss3( );  */
/*   PVDD1DGZ  Pvdd0( );  */
/*   PVDD1DGZ  Pvdd1( );  */
/*   PVDD1DGZ  Pvdd2( );  */
/*   PVDD1DGZ  Pvdd3( );  */
/*   PVDD1DGZ  Pavdd0( );  */
/*   PVSS1DGZ  Pavss0( );  */
/*   PCORNERDG Pcornerul( );  */
/*   PCORNERDG Pcornerur( );  */
/*   PCORNERDG Pcornerll( );  */
/*   PCORNERDG Pcornerlr( );  */


/*  ADDED for Low Power 90nm */
/* Example


OUTPUT pads
ex.   OUTPAD_8  uHBURST0     ( .PADO (HBURSTX[0]),     .PADI (sHBURST[0]));

   PDC0816CDG_33 uHBURST0 (.I (sHBURST[0]), .DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0),
                           .PAD (HBURSTX[0]), .C ());

*/
   PDC0204CDG_33  Ptdspop15(.I(tdsp_portO[15]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[15]), .C ());
   PDC0204CDG_33  Ptdspop14(.I(tdsp_portO[14]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[14]), .C ());
   PDC0204CDG_33  Ptdspop13(.I(tdsp_portO[13]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[13]), .C ());
   PDC0204CDG_33  Ptdspop12(.I(tdsp_portO[12]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[12]), .C ());
   PDC0204CDG_33  Ptdspop11(.I(tdsp_portO[11]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[11]), .C ());
   PDC0204CDG_33  Ptdspop10(.I(tdsp_portO[10]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[10]), .C ());
   PDC0204CDG_33  Ptdspop09(.I(tdsp_portO[9]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[9]), .C ());
   PDC0204CDG_33  Ptdspop08(.I(tdsp_portO[8]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[8]), .C ());
   PDC0204CDG_33  Ptdspop07(.I(tdsp_portO[7]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[7]), .C ());
   PDC0204CDG_33  Ptdspop06(.I(tdsp_portO[6]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[6]), .C ());
   PDC0204CDG_33  Ptdspop05(.I(tdsp_portO[5]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[5]), .C ());
   PDC0204CDG_33  Ptdspop04(.I(tdsp_portO[4]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[4]), .C ());
   PDC0204CDG_33  Ptdspop03(.I(tdsp_portO[3]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[3]), .C ());
   PDC0204CDG_33  Ptdspop02(.I(tdsp_portO[2]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[2]), .C ());
   PDC0204CDG_33  Ptdspop01(.I(tdsp_portO[1]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[1]), .C ());
   PDC0204CDG_33  Ptdspop00(.I(tdsp_portO[0]),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdsp_port_out[0]), .C ());
   PDC0204CDG_33  Ptdigfgop(.I(tdigit_flagO),	.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit_flag), .C ());
   PDC0204CDG_33  Ptdigop7( .I(tdigitO[7]),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit[7]), .C ());
   PDC0204CDG_33  Ptdigop6( .I(tdigitO[6]),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit[6]), .C ());
   PDC0204CDG_33  Ptdigop5( .I(tdigitO[5]),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit[5]), .C ());
   PDC0204CDG_33  Ptdigop4( .I(tdigitO[4]),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit[4]), .C ());
   PDC0204CDG_33  Ptdigop3( .I(tdigitO[3]),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit[3]), .C ());
   PDC0204CDG_33  Ptdigop2( .I(tdigitO[2]),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit[2]), .C ());
   PDC0204CDG_33  Ptdigop1( .I(tdigitO[1]),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit[1]), .C ());
   PDC0204CDG_33  Ptdigop0( .I(tdigitO[0]),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(tdigit[0]), .C ());
   PDC0204CDG_33  Pvcopop(  .I(vcopO),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(vcop), .C ());
   PDC0204CDG_33  Pvcomop(  .I(vcomO),		.DS (1'b0), .OEN (1'b0), .IE (1'b0),
                           .PS (1'b0), .PE (1'b0), .PAD(vcom), .C ());
/*  Example
INPUT pades
    PDC0204CDG_33 uHRDATA0 (.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
                           .PAD (HRDATAX[0]), .C (sHRDATA[0]));
*/

   PDC0204CDG_33    Ptdspip15(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[15]),		.C(tdsp_portI[15]));
   PDC0204CDG_33    Ptdspip14(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[14]),		.C(tdsp_portI[14]));
   PDC0204CDG_33    Ptdspip13(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[13]),		.C(tdsp_portI[13]));
   PDC0204CDG_33    Ptdspip12(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[12]),		.C(tdsp_portI[12]));
   PDC0204CDG_33    Ptdspip11(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[11]),		.C(tdsp_portI[11]));
   PDC0204CDG_33    Ptdspip10(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[10]),		.C(tdsp_portI[10]));
   PDC0204CDG_33    Ptdspip09(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[9]),		.C(tdsp_portI[9]));
   PDC0204CDG_33    Ptdspip08(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[8]),		.C(tdsp_portI[8]));
   PDC0204CDG_33    Ptdspip07(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[7]),		.C(tdsp_portI[7]));
   PDC0204CDG_33    Ptdspip06(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[6]),		.C(tdsp_portI[6]));
   PDC0204CDG_33    Ptdspip05(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[5]),		.C(tdsp_portI[5]));
   PDC0204CDG_33    Ptdspip04(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[4]),		.C(tdsp_portI[4]));
   PDC0204CDG_33    Ptdspip03(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[3]),		.C(tdsp_portI[3]));
   PDC0204CDG_33    Ptdspip02(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[2]),		.C(tdsp_portI[2]));
   PDC0204CDG_33    Ptdspip01(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[1]),		.C(tdsp_portI[1]));
   PDC0204CDG_33    Ptdspip00(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(tdsp_port_in[0]),		.C(tdsp_portI[0]));
   PDC0204CDG_33    Pscanenip(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(scan_en),		.C(scan_enI));
   PDC0204CDG_33    Pscanckip(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(scan_clk),		.C(scan_clkI));
   PDC0204CDG_33    Ptestmdip(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(test_mode),		.C(test_modeI));
   PDC0204CDG_33    Pspifsip( .I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(spi_fs),		.C(spi_fsI));
   PDC0204CDG_33    Pspidip(  .I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(spi_data),		.C(spi_dataI));
   PDC0204CDG_33    Presetip( .I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(reset),		.C(resetI));
   PDC0204CDG_33    Pintip(   .I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(int),		.C(intI));
   PDC0204CDG_33    Prefclkip(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(refclk),		.C(refclkI));
   PDC0204CDG_33    Ppllrstip(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(pllrst),		.C(pllrstI));
   PDC0204CDG_33    Pibiasip(.I (1'b0), .DS (1'b0), .OEN (1'b1), .IE (1'b1),
                           .PS (1'b0), .PE (1'b0),
			.PAD(ibias),		.C(ibiasI));

endmodule 
